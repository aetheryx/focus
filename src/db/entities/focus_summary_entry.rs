//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "focus_summary_entry")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub channel_id: i64,
  #[sea_orm(primary_key, auto_increment = false)]
  pub message_id: i64,
  pub focus_session_id: i64,
  #[sea_orm(column_type = "Text")]
  pub content: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::focus_session::Entity",
    from = "Column::FocusSessionId",
    to = "super::focus_session::Column::Id",
    on_update = "Cascade",
    on_delete = "Restrict"
  )]
  FocusSession,
}

impl Related<super::focus_session::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::FocusSession.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
